#include <bits/stdc++.h>
using namespace std;
bool detect(vector<int> Graph[], int node, int pathVis[])
{
 pathVis[node] = 1;
 for (auto it : Graph[node])
 {
 if (!pathVis[it])
 {
 if (detect(Graph, it, pathVis))
 {
 return true;
 }
 }
 else
 {
 return true;
 }
 }
 pathVis[node] = 0;
 return false;
}
int main()
{
 int V;
 cout << "Enter number of Vertices : ";
 cin >> V;
 vector<int> Graph[V];
 for (int i = 0; i < V; i++)
 {
 cout << "Enter number of neighbours of " << i << " : " << endl;
 int temp;
 cin >> temp;
 if (temp)
 {
 cout << "Enter neighbours : " << endl;
 while (temp--)
 {
 int x;
 cin >> x;
 Graph[i].push_back(x);
 }
 }
 }
 int pathVis[V] = {0};
 if (detect(Graph, 0, pathVis))
 {
 cout << "Cycle" << endl;
 }
 else
 {
 cout << "No cycle" << endl;
 }
 return 0;
}
